{"ast":null,"code":"const validate = (form, setErrors, errors) => {\n  // recibe l form y se vija si el nomnbre esta bien si no es asi que guarde en un estado el error\n  // validando el mail\n  if (!form.email) setErrors({\n    ...errors,\n    email: \"email vacio\"\n  }); // aplicamos el set errors y lo pasmos por parametro por que esta afuera de la funcion general\n  else {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(form.email)) setErrors({\n      ...errors,\n      email: \"\"\n    });else setErrors({\n      ...errors,\n      email: \"email invalido\"\n    });\n  }\n  if (!form.username) {\n    setErrors({\n      ...errors,\n      email: \"nombre de usuario vacio\"\n    });\n  } else if (form.username.length > 35) {\n    setErrors({\n      ...errors,\n      username: \"el nombre de usuario no puede tener más de 35 caracteres\"\n    });\n  } else {\n    setErrors({\n      ...errors,\n      username: \"\"\n    });\n  }\n};\nexport default validate;","map":{"version":3,"names":["validate","form","setErrors","errors","email","test","username","length"],"sources":["C:/Users/crist/OneDrive/Escritorio/M2 PT12A/RICK AND MORTY APP/rick_and_morty/src/components/Form/validation.js"],"sourcesContent":["const validate = (form, setErrors, errors) => {\r\n  // recibe l form y se vija si el nomnbre esta bien si no es asi que guarde en un estado el error\r\n  // validando el mail\r\n  if (!form.email)\r\n    setErrors({\r\n      ...errors,\r\n      email: \"email vacio\",\r\n    }); // aplicamos el set errors y lo pasmos por parametro por que esta afuera de la funcion general\r\n  else {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(form.email))\r\n      setErrors({ ...errors, email: \"\" });\r\n    else setErrors({ ...errors, email: \"email invalido\" });\r\n  }\r\n\r\n  if (!form.username) {\r\n    setErrors({...errors, email: \"nombre de usuario vacio\"});\r\n  } else if (form.username.length > 35) {\r\n    setErrors({...errors, username: \"el nombre de usuario no puede tener más de 35 caracteres\"});\r\n  } else {\r\n    setErrors({...errors, username: \"\"});\r\n  }\r\n};\r\nexport default validate;\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGA,CAACC,IAAI,EAAEC,SAAS,EAAEC,MAAM,KAAK;EAC5C;EACA;EACA,IAAI,CAACF,IAAI,CAACG,KAAK,EACbF,SAAS,CAAC;IACR,GAAGC,MAAM;IACTC,KAAK,EAAE;EACT,CAAC,CAAC,CAAC,CAAC;EAAA,KACD;IACH,IAAI,6CAA6C,CAACC,IAAI,CAACJ,IAAI,CAACG,KAAK,CAAC,EAChEF,SAAS,CAAC;MAAE,GAAGC,MAAM;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC,CAAC,KACjCF,SAAS,CAAC;MAAE,GAAGC,MAAM;MAAEC,KAAK,EAAE;IAAiB,CAAC,CAAC;EACxD;EAEA,IAAI,CAACH,IAAI,CAACK,QAAQ,EAAE;IAClBJ,SAAS,CAAC;MAAC,GAAGC,MAAM;MAAEC,KAAK,EAAE;IAAyB,CAAC,CAAC;EAC1D,CAAC,MAAM,IAAIH,IAAI,CAACK,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAE;IACpCL,SAAS,CAAC;MAAC,GAAGC,MAAM;MAAEG,QAAQ,EAAE;IAA0D,CAAC,CAAC;EAC9F,CAAC,MAAM;IACLJ,SAAS,CAAC;MAAC,GAAGC,MAAM;MAAEG,QAAQ,EAAE;IAAE,CAAC,CAAC;EACtC;AACF,CAAC;AACD,eAAeN,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}