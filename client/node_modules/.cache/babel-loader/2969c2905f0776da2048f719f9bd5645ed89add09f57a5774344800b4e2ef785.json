{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\OneDrive\\\\Escritorio\\\\M2 PT12A\\\\RICK AND MORTY APP\\\\rick_and_morty\\\\src\\\\components\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport style from './searchBar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar(props) {\n  _s();\n  const [character, setCharacter] = useState(''); // es lo que escribe el usuario\n\n  const handleChange = event => {\n    setId(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: style.input,\n      type: \"search\",\n      placeholder: \"Ingrese el numero de personaje\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.boton,\n      onClick: () => props.onSearch(),\n      children: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n// agregamos props.onSearch\n_s(SearchBar, \"pv9IsLL1os8EqJDWV1vNc0qPYrI=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","style","jsxDEV","_jsxDEV","SearchBar","props","_s","character","setCharacter","handleChange","event","setId","target","value","className","container","children","input","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","boton","onClick","onSearch","_c","$RefreshReg$"],"sources":["C:/Users/crist/OneDrive/Escritorio/M2 PT12A/RICK AND MORTY APP/rick_and_morty/src/components/SearchBar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport style from './searchBar.module.css'\r\n\r\n\r\nexport default function SearchBar(props) {\r\n\r\n  const [character, setCharacter] = useState ('') // es lo que escribe el usuario\r\n\r\n  const handleChange = (event) => {\r\n    setId(event.target.value);\r\n};\r\n\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <input className={style.input} type=\"search\" placeholder=\"Ingrese el numero de personaje\" onChange={handleChange}/>\r\n      <button className={style.boton} onClick={()=>props.onSearch()}>Agregar</button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// agregamos props.onSearch"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG1C,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEvC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAE,EAAE,CAAC,EAAC;;EAEhD,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAC9BC,KAAK,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAGC,oBACEV,OAAA;IAAKW,SAAS,EAAEb,KAAK,CAACc,SAAU;IAAAC,QAAA,gBAC9Bb,OAAA;MAAOW,SAAS,EAAEb,KAAK,CAACgB,KAAM;MAACC,IAAI,EAAC,QAAQ;MAACC,WAAW,EAAC,gCAAgC;MAACC,QAAQ,EAAEX;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACnHrB,OAAA;MAAQW,SAAS,EAAEb,KAAK,CAACwB,KAAM;MAACC,OAAO,EAAEA,CAAA,KAAIrB,KAAK,CAACsB,QAAQ,EAAG;MAAAX,QAAA,EAAC;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3E;AAEV;;AAEA;AAAAlB,EAAA,CAjBwBF,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}